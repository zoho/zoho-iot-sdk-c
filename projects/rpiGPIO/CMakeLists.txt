CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)

SET(CA_CRT /usr/local/certs/ca.crt)
SET(CLIENT_CRT /usr/local/certs/client.crt)
SET(CLIENT_KEY /usr/local/certs/client.key)

# Configure EMBED_CERT_MODE to ON if you want to embed certs along with application. else
# certificates needs to be copied along with application.
OPTION(EMBED_CERT_MODE "Embed certificates along with application" OFF)

INCLUDE(${PROJECT_SOURCE_DIR}/cmake/internalFuncs.cmake)

IF(EMBED_CERT_MODE)
    SET(CRT_PARSE_MODE EMBED)
ELSE()
    SET(CRT_PARSE_MODE REFERENCE)
ENDIF(EMBED_CERT_MODE)

LIST(APPEND FEATURES "-DCRT_PARSE_MODE=${CRT_PARSE_MODE}")
LIST(APPEND FEATURES "-D${CRT_PARSE_MODE}_MODE")
MESSAGE(STATUS "CERTIFICATE CONFIG MODE : " ${CRT_PARSE_MODE})

IF(ENABLE_TLS)
    LIST(APPEND CERTS CA_CRT)
    IF(USE_CLIENT_CERTS)
        LIST(APPEND CERTS CLIENT_CRT CLIENT_KEY)
    ENDIF(USE_CLIENT_CERTS)

    IF(EXISTS ${PROJECT_SOURCE_DIR}/include/zclient_certificates.h)
        FILE(REMOVE ${PROJECT_SOURCE_DIR}/include/zclient_certificates.h)
    ENDIF()

    FOREACH(CERT ${CERTS})
        IF(EMBED_CERT_MODE)
            READ_FILE(${${CERT}} ${CERT})
        ELSE()
            LIST(APPEND CERTS_PATH "-D${CERT}=\"${${CERT}}\"")
        ENDIF(EMBED_CERT_MODE)
    ENDFOREACH(CERT)
ENDIF(ENABLE_TLS)

INCLUDE(./lib/pigpio.cmake)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib/pigpio-master)
LIST(APPEND PIGPIO_SOURCES
           "${CMAKE_CURRENT_SOURCE_DIR}/lib/pigpio-master/pigpio.c"
           "${CMAKE_CURRENT_SOURCE_DIR}/lib/pigpio-master/command.c")

ADD_LIBRARY(pigpio STATIC ${PIGPIO_SOURCES})


ADD_EXECUTABLE(rpiGPIO rpiGPIO.c)
TARGET_COMPILE_DEFINITIONS(rpiGPIO PUBLIC ${FEATURES})
IF(ENABLE_TLS)
    TARGET_COMPILE_DEFINITIONS(rpiGPIO PUBLIC ${CERTS_PATH})
ENDIF(ENABLE_TLS)

TARGET_INCLUDE_DIRECTORIES(rpiGPIO PUBLIC include )
TARGET_LINK_LIBRARIES(rpiGPIO PRIVATE zoho_iot_sdk PRIVATE pigpio PUBLIC pthread)